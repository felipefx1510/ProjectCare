"""update 1

Revision ID: dbb8f071b43e
Revises: 92f528bb3e90
Create Date: 2025-06-02 02:35:25.965749

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dbb8f071b43e'
down_revision = '92f528bb3e90'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('cpf', sa.String(length=17), nullable=False),
    sa.Column('gender', sa.String(length=20), nullable=False),
    sa.Column('birthdate', sa.Date(), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=100), nullable=False),
    sa.Column('sadad', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("gender IN ('Masculino', 'Feminino', 'Outro')", name='ck_user_gender'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cpf'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('caregiver',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('specialty', sa.String(length=100), nullable=False),
    sa.Column('experience', sa.Integer(), nullable=False),
    sa.Column('education', sa.String(length=100), nullable=False),
    sa.Column('expertise_area', sa.String(length=100), nullable=False),
    sa.Column('skills', sa.String(length=500), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('dias_disponiveis', sa.String(length=100), nullable=True),
    sa.Column('periodos_disponiveis', sa.String(length=100), nullable=True),
    sa.Column('inicio_imediato', sa.Boolean(), nullable=True),
    sa.Column('pretensao_salarial', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('pretensao_salarial IS NULL OR pretensao_salarial >= 0', name='ck_caregiver_salary_non_negative'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('responsible',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('relationship_with_elderly', sa.String(length=50), nullable=True),
    sa.Column('primary_need_description', sa.String(length=255), nullable=True),
    sa.Column('preferred_contact_method', sa.String(length=30), nullable=True),
    sa.CheckConstraint("preferred_contact_method IN ('E-mail', 'Telefone', 'WhatsApp', 'Sem preferÃªncia')", name='ck_responsible_contact_method'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contract',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('hourly_rate', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('monthly_salary', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('payment_frequency', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('work_schedule', sa.Text(), nullable=True),
    sa.Column('special_conditions', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('responsible_id', sa.Integer(), nullable=False),
    sa.Column('caregiver_id', sa.Integer(), nullable=False),
    sa.CheckConstraint("status IN ('active', 'completed', 'cancelled')", name='ck_contract_status_valid'),
    sa.ForeignKeyConstraint(['caregiver_id'], ['caregiver.id'], ),
    sa.ForeignKeyConstraint(['responsible_id'], ['responsible.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('elderly',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('cpf', sa.String(length=20), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=False),
    sa.Column('gender', sa.String(length=10), nullable=False),
    sa.Column('address_elderly', sa.String(length=255), nullable=True),
    sa.Column('city_elderly', sa.String(length=100), nullable=True),
    sa.Column('state_elderly', sa.String(length=100), nullable=True),
    sa.Column('photo_url', sa.String(length=255), nullable=True),
    sa.Column('medical_conditions', sa.Text(), nullable=True),
    sa.Column('allergies', sa.Text(), nullable=True),
    sa.Column('medications_in_use', sa.Text(), nullable=True),
    sa.Column('mobility_level', sa.String(length=40), nullable=True),
    sa.Column('specific_care_needs', sa.Text(), nullable=True),
    sa.Column('emergency_contact_name', sa.String(length=100), nullable=True),
    sa.Column('emergency_contact_phone', sa.String(length=30), nullable=True),
    sa.Column('emergency_contact_relationship', sa.String(length=50), nullable=True),
    sa.Column('health_plan_name', sa.String(length=100), nullable=True),
    sa.Column('health_plan_number', sa.String(length=50), nullable=True),
    sa.Column('additional_notes', sa.Text(), nullable=True),
    sa.Column('responsible_id', sa.Integer(), nullable=False),
    sa.CheckConstraint("gender IN ('Masculino', 'Feminino', 'Outro')", name='ck_elderly_gender'),
    sa.ForeignKeyConstraint(['responsible_id'], ['responsible.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('elderly')
    op.drop_table('contract')
    op.drop_table('responsible')
    op.drop_table('caregiver')
    op.drop_table('users')
    # ### end Alembic commands ###
