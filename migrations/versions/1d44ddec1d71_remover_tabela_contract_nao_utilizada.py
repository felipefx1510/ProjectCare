"""Remover tabela contract nao utilizada

Revision ID: 1d44ddec1d71
Revises: 171fe98fa338
Create Date: 2025-06-02 18:08:09.824614

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1d44ddec1d71'
down_revision = '171fe98fa338'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('contract')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contract',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('hourly_rate', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('monthly_salary', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('payment_frequency', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('work_schedule', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('special_conditions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('responsible_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('caregiver_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.CheckConstraint("status::text = ANY (ARRAY['active'::character varying, 'completed'::character varying, 'cancelled'::character varying]::text[])", name=op.f('ck_contract_status_valid')),
    sa.ForeignKeyConstraint(['caregiver_id'], ['caregiver.id'], name=op.f('contract_caregiver_id_fkey')),
    sa.ForeignKeyConstraint(['responsible_id'], ['responsible.id'], name=op.f('contract_responsible_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('contract_pkey'))
    )
    # ### end Alembic commands ###
